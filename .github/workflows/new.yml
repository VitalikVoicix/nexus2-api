name: Build and Deploy to dev envenvironment....

on:
  push:
    branches:
        - develop
        - master
  pull_request:
    branches:
        - develop
        - master
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: 8
    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipMunitTests
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: target/*.jar
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v4
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - uses: actions/download-artifact@v4
      with:
        name: artifacts
    - name: Deploy to Dev
      env:
        DECRYPT_KEY: ${{ secrets.SEC_KEY }}
        CON_APP_CLIENTID: ${{ secrets.CON_APP_CLIENT_ID }}
        CON_APP_CLIENTSECRET: ${{ secrets.CON_APP_CLIENT_SECRET }}
      run: |
        artifactName=$(ls *.jar | head -1)
        if [ "${{ github.ref }}" == "refs/heads/develop" ]; then
            env="dev"
        elif [ "${{ github.ref }}" == "refs/heads/master" ]; then
            env="test"
        fi
        mvn deploy -P${env} -DskipMunitTests -DmuleDeploy \
         -Dmule.artifact=$artifactName \
         -Dsecurekey="$DECRYPT_KEY" \
         -Danypoint.ciappclientid="$CON_APP_CLIENTID" \
         -Danypoint.ciappclientsecret="$CON_APP_CLIENTSECRET"
         
